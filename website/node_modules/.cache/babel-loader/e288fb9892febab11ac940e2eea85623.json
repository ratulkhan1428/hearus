{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\Projects\\\\hearus\\\\website\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const handleGoogleSignIn = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      const {\n        displayName,\n        email\n      } = result.user;\n      const signedInUser = {\n        name: displayName,\n        email\n      };\n      setLoggedInUser(signedInUser);\n      storeAuthToken();\n    }).catch(function (error) {\n      const errorMessage = error.message;\n      console.log(errorMessage);\n    });\n  };\n\n  const storeAuthToken = () => {\n    firebase.auth().currentUser.getIdToken(\n    /* forceRefresh */\n    true).then(function (idToken) {\n      sessionStorage.setItem('token', idToken);\n      history.replace(from);\n    }).catch(function (error) {// Handle error\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '50px'\n    },\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 shadow p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: handleGoogleSignIn,\n          children: \"Google Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 d-none d-md-block align-self-end\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid\",\n          src: loginBg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Login, \"PIailSvkpuRmeZii6BQZ9MYdqB8=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Web Development/Projects/hearus/website/src/components/Login/Login.js"],"names":["React","useContext","useHistory","useLocation","UserContext","Login","loggedInUser","setLoggedInUser","history","location","from","state","pathname","firebase","apps","length","initializeApp","firebaseConfig","handleGoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","displayName","email","user","signedInUser","name","storeAuthToken","catch","error","errorMessage","message","console","log","currentUser","getIdToken","idToken","sessionStorage","setItem","replace","marginTop","loginBg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AACA,SAASC,WAAT,QAA4B,WAA5B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,UAAU,CAACG,WAAD,CAAlD;AACA,QAAMI,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWD,QAAQ,CAACE,KAAT,IAAkB;AAAED,IAAAA,IAAI,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAnC;;AAEA,MAAIC,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BF,IAAAA,QAAQ,CAACG,aAAT,CAAuBC,cAAvB;AACD;;AAED,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,QAAQ,GAAG,IAAIN,QAAQ,CAACO,IAAT,CAAcC,kBAAlB,EAAf;AACAR,IAAAA,QAAQ,CAACO,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAA+C,UAAUC,MAAV,EAAkB;AAC/D,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAyBF,MAAM,CAACG,IAAtC;AACA,YAAMC,YAAY,GAAG;AAAEC,QAAAA,IAAI,EAAEJ,WAAR;AAAqBC,QAAAA;AAArB,OAArB;AACAnB,MAAAA,eAAe,CAACqB,YAAD,CAAf;AACAE,MAAAA,cAAc;AACf,KALD,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACxB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD,KARD;AASD,GAXD;;AAaA,QAAMH,cAAc,GAAG,MAAM;AAC3BjB,IAAAA,QAAQ,CAACO,IAAT,GAAgBiB,WAAhB,CAA4BC,UAA5B;AAAuC;AAAmB,QAA1D,EACGf,IADH,CACQ,UAAUgB,OAAV,EAAmB;AACvBC,MAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCF,OAAhC;AACA/B,MAAAA,OAAO,CAACkC,OAAR,CAAgBhC,IAAhB;AACD,KAJH,EAIKqB,KAJL,CAIW,UAAUC,KAAV,EAAiB,CACxB;AACD,KANH;AAOD,GARD;;AAUE,sBACI;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAiC,IAAA,SAAS,EAAC,WAA3C;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,EAAlB;AAAqB,UAAA,OAAO,EAAEzB,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,2CAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAE0B,OAAhC;AAAyC,UAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA7CH;;GAAMvC,K;UAEcH,U,EACCC,W;;;KAHfE,K;AA+CJ,eAAeA,KAAf","sourcesContent":["import React, { useContext } from 'react';\r\n\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { UserContext } from '../../App';\r\n\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n  \r\n    if (firebase.apps.length === 0) {\r\n      firebase.initializeApp(firebaseConfig);\r\n    }\r\n  \r\n    const handleGoogleSignIn = () => {\r\n      var provider = new firebase.auth.GoogleAuthProvider();\r\n      firebase.auth().signInWithPopup(provider).then(function (result) {\r\n        const { displayName, email } = result.user;\r\n        const signedInUser = { name: displayName, email }\r\n        setLoggedInUser(signedInUser);\r\n        storeAuthToken();\r\n      }).catch(function (error) {\r\n        const errorMessage = error.message;\r\n        console.log(errorMessage);\r\n      });\r\n    }\r\n  \r\n    const storeAuthToken = () => {\r\n      firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\r\n        .then(function (idToken) {\r\n          sessionStorage.setItem('token', idToken);\r\n          history.replace(from);\r\n        }).catch(function (error) {\r\n          // Handle error\r\n        });\r\n    }\r\n  \r\n      return (\r\n          <div style={{marginTop: '50px'}} className=\"container\">\r\n              <div className=\"row align-items-center\">\r\n                  <div className=\"col-md-6 shadow p-5\">\r\n                      <button className=\"\" onClick={handleGoogleSignIn}>Google Sign in</button>\r\n                  </div>\r\n                  <div className=\"col-md-6 d-none d-md-block align-self-end\">\r\n                      <img className=\"img-fluid\" src={loginBg} alt=\"\" />\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      );\r\n  };\r\n  \r\n  export default Login;"]},"metadata":{},"sourceType":"module"}